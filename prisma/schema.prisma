// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model education_history {
  id             String   @id @default(uuid())
  school         String
  degree         String
  field_of_study String
  start_date     DateTime
  end_date       DateTime
  description    String
}

model skills {
  id                 String               @id @default(uuid())
  name               String               @unique
  created_at         DateTime             @default(now())
  updated_at         DateTime             @updatedAt
  experiences_skills experiences_skills[]
  experiencesId      String?
  project_skills     project_skills[]
}

model bullet_points {
  id            String   @id @default(uuid())
  text          String
  experience_id String
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  experience experiences @relation(fields: [experience_id], references: [id])
}

model experiences_skills {
  experience_id String
  skill_id      String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  experience experiences @relation(fields: [experience_id], references: [id])
  skill      skills      @relation(fields: [skill_id], references: [id])

  @@id([experience_id, skill_id])
}

model experiences {
  id                 String               @id @default(uuid())
  company            String
  position           String
  bullet_points      bullet_points[]
  start_date         DateTime
  end_date           DateTime?
  created_at         DateTime             @default(now())
  updated_at         DateTime             @updatedAt
  experiences_skills experiences_skills[]
}

model user_sessions {
  sid    String   @id(map: "session_pkey") @db.VarChar
  sess   Json     @db.Json
  expire DateTime @db.Timestamp(6)

  @@index([expire], map: "IDX_session_expire")
}

model project_skills {
  project_id String
  skill_id   String

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  project projects @relation(fields: [project_id], references: [id])
  skill   skills   @relation(fields: [skill_id], references: [id])

  @@id([project_id, skill_id])
}

model projects {
  id          String  @id @default(uuid())
  name        String
  description String
  github_url  String?
  website_url String?
  image_url   String?

  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  project_skills project_skills[]
}
